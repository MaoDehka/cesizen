#!/bin/bash
# scripts/deploy-https.sh

set -e

echo "üöÄ D√©ploiement CESIZen en HTTPS - √âtape par √©tape"

# Fonction pour v√©rifier si un service r√©pond
check_service() {
    local url=$1
    local name=$2
    echo "üîç V√©rification de $name..."
    if curl -f -s "$url" > /dev/null; then
        echo "‚úÖ $name: OK"
        return 0
    else
        echo "‚ùå $name: ERREUR"
        return 1
    fi
}

# √âtape 1: D√©ploiement en HTTP d'abord
echo "üìã √âtape 1: D√©ploiement en HTTP"
echo "Assurez-vous que docker/nginx/prod.conf pointe vers la config HTTP simple"

# V√©rifier que le docker-compose.prod.yml utilise la bonne config
if ! grep -q "prod.conf" docker-compose.prod.yml; then
    echo "‚ö†Ô∏è  V√©rifiez que docker-compose.prod.yml utilise prod.conf (pas prod-https.conf)"
fi

# D√©ploiement
docker-compose -f docker-compose.prod.yml down
docker-compose -f docker-compose.prod.yml pull
docker-compose -f docker-compose.prod.yml up -d

# Attendre que les services d√©marrent
echo "‚è≥ Attente du d√©marrage des services..."
sleep 30

# V√©rifications
check_service "http://cesizen-prod.chickenkiller.com/health" "Application HTTP"
check_service "http://cesizen-prod.chickenkiller.com/api/contents/home" "API HTTP"

# √âtape 2: G√©n√©ration des certificats SSL
echo ""
echo "üìã √âtape 2: G√©n√©ration des certificats SSL"
echo "Lancement de certbot..."

# Test d'abord avec --dry-run
echo "üß™ Test de g√©n√©ration des certificats..."
docker-compose -f docker-compose.prod.yml exec certbot \
    certbot certonly --webroot -w /var/www/certbot \
    -d cesizen-prod.chickenkiller.com \
    --email admin@chickenkiller.com \
    --agree-tos --no-eff-email --dry-run

if [ $? -eq 0 ]; then
    echo "‚úÖ Test r√©ussi, g√©n√©ration r√©elle des certificats..."
    docker-compose -f docker-compose.prod.yml exec certbot \
        certbot certonly --webroot -w /var/www/certbot \
        -d cesizen-prod.chickenkiller.com \
        --email admin@chickenkiller.com \
        --agree-tos --no-eff-email
else
    echo "‚ùå √âchec du test de g√©n√©ration des certificats"
    echo "V√©rifiez que :"
    echo "- Le DNS pointe vers votre serveur"
    echo "- Le port 80 est ouvert"
    echo "- L'application r√©pond sur http://cesizen-prod.chickenkiller.com/.well-known/acme-challenge/"
    exit 1
fi

# √âtape 3: Passage en HTTPS
echo ""
echo "üìã √âtape 3: Configuration HTTPS"
echo "‚ö†Ô∏è  MANUEL: Modifiez docker-compose.prod.yml pour utiliser prod-https.conf"
echo "‚ö†Ô∏è  MANUEL: Puis relancez le d√©ploiement"

echo ""
echo "Commandes √† ex√©cuter manuellement :"
echo "1. Modifier docker-compose.prod.yml ligne nginx volumes:"
echo "   - ./docker/nginx/prod-https.conf:/etc/nginx/conf.d/default.conf"
echo ""
echo "2. Relancer les services:"
echo "   docker-compose -f docker-compose.prod.yml down"
echo "   docker-compose -f docker-compose.prod.yml up -d"
echo ""
echo "3. V√©rifier HTTPS:"
echo "   curl -f https://cesizen-prod.chickenkiller.com/health"

echo ""
echo "üéâ Script termin√©. Continuez avec les √©tapes manuelles ci-dessus."