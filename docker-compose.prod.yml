version: '3.8'

services:
  # Base de donn√©es MySQL
  mysql:
    image: mysql:8.0
    container_name: cesizen-prod-mysql
    environment:
      MYSQL_ROOT_PASSWORD: prod_root_password_secure
      MYSQL_DATABASE: cesizen_prod
      MYSQL_USER: cesizen_user
      MYSQL_PASSWORD: prod_password_secure
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./backend/docker/mysql/init-gestsup.sql:/docker-entrypoint-initdb.d/02-gestsup.sql
    networks:
      - cesizen-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis
  redis:
    image: redis:7-alpine
    container_name: cesizen-prod-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_prod_data:/data
    networks:
      - cesizen-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Laravel
  backend:
    image: ghcr.io/maodehka/cesizen-backend:latest
    platform: linux/amd64
    container_name: cesizen-prod-backend
    environment:
      APP_ENV: production
      APP_DEBUG: "false"
      APP_KEY: base64:${LARAVEL_APP_KEY}
      APP_URL: http://cesizen-prod1.chickenkiller.com
      
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: cesizen_prod
      DB_USERNAME: cesizen_user
      DB_PASSWORD: prod_password_secure
      
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_CONNECTION: redis
      
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      MAIL_MAILER: log
      JWT_SECRET: ${JWT_SECRET}
      
      SESSION_SECURE_COOKIE: "false"
      SESSION_SAME_SITE: lax
    volumes:
      - backend_prod_storage:/var/www/html/storage
      - backend_prod_logs:/var/www/html/storage/logs
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - cesizen-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Frontend Vue.js
  frontend:
    image: ghcr.io/maodehka/cesizen-frontend:latest
    platform: linux/amd64
    container_name: cesizen-prod-frontend
    environment:
      VITE_API_URL: http://cesizen-prod1.chickenkiller.com:8080/api
      VITE_APP_ENV: production
    ports:
      - "80:80" 
    depends_on:
      - backend
    networks:
      - cesizen-prod-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Watchtower
  watchtower:
    image: containrrr/watchtower
    container_name: cesizen-prod-watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_POLL_INTERVAL: 3600
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_INCLUDE_STOPPED: "true"
      WATCHTOWER_LABEL_ENABLE: "true"
    networks:
      - cesizen-prod-network
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

volumes:
  mysql_prod_data:
    driver: local
  redis_prod_data:
    driver: local
  backend_prod_storage:
    driver: local
  backend_prod_logs:
    driver: local

networks:
  cesizen-prod-network:
    driver: bridge
    