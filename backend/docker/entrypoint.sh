#!/bin/sh
set -e

mkdir -p /var/log/supervisor
chown www:www /var/log/supervisor

echo "üöÄ D√©marrage de CESIZen Backend..."

# Attendre que la base de donn√©es soit pr√™te
if [ "$DB_CONNECTION" = "mysql" ]; then
    echo "‚è≥ Attente de la base de donn√©es MySQL..."
    while ! nc -z "$DB_HOST" "$DB_PORT"; do
        sleep 1
    done
    echo "‚úÖ Base de donn√©es MySQL pr√™te!"
fi

# Cr√©er le r√©pertoire de stockage s'il n'existe pas
mkdir -p /var/www/html/storage/logs
mkdir -p /var/www/html/storage/framework/cache
mkdir -p /var/www/html/storage/framework/sessions
mkdir -p /var/www/html/storage/framework/views

# D√©finir les permissions
chown -R www:www /var/www/html/storage
chown -R www:www /var/www/html/bootstrap/cache
chmod -R 775 /var/www/html/storage
chmod -R 775 /var/www/html/bootstrap/cache

# Optimiser l'application pour la production
if [ "$APP_ENV" = "production" ]; then
    echo "üîß Optimisation pour la production..."
    php artisan config:cache
    php artisan route:cache
    php artisan view:cache
fi

# Ex√©cuter les migrations
echo "üìä Ex√©cution des migrations..."
php artisan migrate --force

# Seeders uniquement en d√©veloppement ou si explicitement demand√©
if [ "$APP_ENV" = "local" ] || [ "$RUN_SEEDERS" = "true" ]; then
    echo "üå± Ex√©cution des seeders..."
    php artisan db:seed --force
fi

# G√©n√©rer la cl√© JWT si elle n'existe pas
if [ -z "$JWT_SECRET" ]; then
    echo "üîë G√©n√©ration de la cl√© JWT..."
    php artisan jwt:secret --force
fi

# Nettoyer le cache
php artisan cache:clear
php artisan config:clear

echo "‚úÖ CESIZen Backend pr√™t!"

# Ex√©cuter la commande pass√©e en param√®tre
exec "$@"